plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id "io.freefair.lombok" version "${lombokPluginVersion}"
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "io.freefair.lombok"
    repositories {
        maven {
            url 'https://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    group "com.xunlekj"
    version "1.0-SNAPSHOT"

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "com.querydsl:querydsl-core:${querydslVersion}"
        implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
        implementation "com.querydsl:querydsl-apt:${querydslVersion}"

        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        implementation "com.google.guava:guava:${googleGuavaVersion}"
        implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
        implementation "org.apache.commons:commons-collections4:${commonsCollectionsVersion}"
        implementation "commons-io:commons-io:${commonsIOVersion}"

        annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
        annotationProcessor "org.springframework.boot:spring-boot-starter-data-jpa"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        compileOnly "io.freefair.gradle:lombok-plugin:${lombokPluginVersion}"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
//        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    test {
        useJUnitPlatform()
    }

    bootJar {
        enabled = false
    }
}

allprojects {
    if(it.name != "vehicle-core") {
        dependencies {
            implementation project(":vehicle-core")
        }
    }
}

